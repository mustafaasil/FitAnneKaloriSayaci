// <auto-generated />
using System;
using FitAnneKaloriSayaci.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FitAnneKaloriSayaci.DAL.Migrations
{
    [DbContext(typeof(ProjectContext))]
    partial class ProjectContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FitAnneKaloriSayaci.DATA.Siniflar.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdminId");

                    b.ToTable("Adminler");

                    b.HasData(
                        new
                        {
                            AdminId = 1,
                            Email = "admin",
                            Sifre = "2"
                        });
                });

            modelBuilder.Entity("FitAnneKaloriSayaci.DATA.Siniflar.Kategori", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(2);

                    b.HasKey("ID");

                    b.ToTable("Kategoriler");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Ad = "İçecekler"
                        },
                        new
                        {
                            ID = 2,
                            Ad = "Meyveler"
                        },
                        new
                        {
                            ID = 3,
                            Ad = "Sebzeler"
                        },
                        new
                        {
                            ID = 4,
                            Ad = "Tatlılar"
                        },
                        new
                        {
                            ID = 5,
                            Ad = "Yemekler"
                        });
                });

            modelBuilder.Entity("FitAnneKaloriSayaci.DATA.Siniflar.Kullanici", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(2);

                    b.Property<decimal>("Boy")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DogumTarihi")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("HamileMi")
                        .HasColumnType("bit");

                    b.Property<byte?>("HamilelikHaftasi")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("Kilo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TelefonNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Kullanicilar");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Ad = "Ayse",
                            Boy = 170m,
                            DogumTarihi = new DateTime(1992, 5, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ayse@a.com",
                            HamileMi = false,
                            Kilo = 70m,
                            Sifre = "123456.Aa",
                            Soyad = "Yılmaz",
                            TelefonNo = "(111) 111-1111"
                        },
                        new
                        {
                            ID = 2,
                            Ad = "Fatma",
                            Boy = 200m,
                            DogumTarihi = new DateTime(1985, 9, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "fatma@f.com",
                            HamileMi = true,
                            HamilelikHaftasi = (byte)17,
                            Kilo = 100m,
                            Sifre = "123456.Aa",
                            Soyad = "Özkul",
                            TelefonNo = "(222) 222-2222"
                        });
                });

            modelBuilder.Entity("FitAnneKaloriSayaci.DATA.Siniflar.Ogun", b =>
                {
                    b.Property<int>("OgunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OgunId"), 1L, 1);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OgunId");

                    b.ToTable("Ogunler");

                    b.HasData(
                        new
                        {
                            OgunId = 1,
                            Ad = "Kahvaltı"
                        },
                        new
                        {
                            OgunId = 2,
                            Ad = "Öğle"
                        },
                        new
                        {
                            OgunId = 3,
                            Ad = "Ara Öğün"
                        },
                        new
                        {
                            OgunId = 4,
                            Ad = "Akşam"
                        });
                });

            modelBuilder.Entity("FitAnneKaloriSayaci.DATA.Siniflar.OgunUrun", b =>
                {
                    b.Property<int>("OgunId")
                        .HasColumnType("int");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("OgunId", "UrunId");

                    b.HasIndex("UrunId");

                    b.ToTable("OgunUrun");
                });

            modelBuilder.Entity("FitAnneKaloriSayaci.DATA.Siniflar.ProjeYoneticisi", b =>
                {
                    b.Property<int>("ProjeYoneticisiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjeYoneticisiId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjeYoneticisiId");

                    b.ToTable("ProjeYoneticiler");

                    b.HasData(
                        new
                        {
                            ProjeYoneticisiId = 1,
                            Email = "projeyoneticisi",
                            Sifre = "1"
                        });
                });

            modelBuilder.Entity("FitAnneKaloriSayaci.DATA.Siniflar.Urun", b =>
                {
                    b.Property<int>("UrunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UrunId"), 1L, 1);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FotografYolu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Kalori")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("KategoriId")
                        .HasColumnType("int");

                    b.Property<byte[]>("UrunFotograf")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("UrunId");

                    b.HasIndex("KategoriId");

                    b.ToTable("Urunler");

                    b.HasData(
                        new
                        {
                            UrunId = 1,
                            Ad = "Çay",
                            Kalori = 1m,
                            KategoriId = 1
                        },
                        new
                        {
                            UrunId = 2,
                            Ad = "Kola",
                            Kalori = 37m,
                            KategoriId = 1
                        },
                        new
                        {
                            UrunId = 3,
                            Ad = "Fanta",
                            Kalori = 48m,
                            KategoriId = 1
                        },
                        new
                        {
                            UrunId = 4,
                            Ad = "Ayran",
                            Kalori = 40m,
                            KategoriId = 1
                        },
                        new
                        {
                            UrunId = 5,
                            Ad = "Portakal Suyu",
                            Kalori = 45m,
                            KategoriId = 1
                        },
                        new
                        {
                            UrunId = 6,
                            Ad = "Vişne",
                            Kalori = 50m,
                            KategoriId = 2
                        },
                        new
                        {
                            UrunId = 7,
                            Ad = "Armut",
                            Kalori = 57m,
                            KategoriId = 2
                        },
                        new
                        {
                            UrunId = 8,
                            Ad = "Üzüm",
                            Kalori = 67m,
                            KategoriId = 2
                        },
                        new
                        {
                            UrunId = 9,
                            Ad = "Şeftali",
                            Kalori = 39m,
                            KategoriId = 2
                        },
                        new
                        {
                            UrunId = 10,
                            Ad = "Ayva",
                            Kalori = 57m,
                            KategoriId = 2
                        },
                        new
                        {
                            UrunId = 11,
                            Ad = "Taze Kabak",
                            Kalori = 19m,
                            KategoriId = 3
                        },
                        new
                        {
                            UrunId = 12,
                            Ad = "Ispanak",
                            Kalori = 23m,
                            KategoriId = 3
                        },
                        new
                        {
                            UrunId = 13,
                            Ad = "Havuç",
                            Kalori = 41m,
                            KategoriId = 3
                        },
                        new
                        {
                            UrunId = 14,
                            Ad = "Pırasa",
                            Kalori = 14m,
                            KategoriId = 3
                        },
                        new
                        {
                            UrunId = 15,
                            Ad = "KarnaBahar",
                            Kalori = 25m,
                            KategoriId = 3
                        },
                        new
                        {
                            UrunId = 16,
                            Ad = "Revani",
                            Kalori = 348m,
                            KategoriId = 4
                        },
                        new
                        {
                            UrunId = 17,
                            Ad = "Elmali Kek",
                            Kalori = 301m,
                            KategoriId = 4
                        },
                        new
                        {
                            UrunId = 18,
                            Ad = "Mozaik Pasta",
                            Kalori = 368m,
                            KategoriId = 4
                        },
                        new
                        {
                            UrunId = 19,
                            Ad = "Rulo Pasta",
                            Kalori = 179m,
                            KategoriId = 4
                        },
                        new
                        {
                            UrunId = 20,
                            Ad = "Şöbiyet",
                            Kalori = 326m,
                            KategoriId = 4
                        },
                        new
                        {
                            UrunId = 21,
                            Ad = "Adana Kebap",
                            Kalori = 361m,
                            KategoriId = 5
                        },
                        new
                        {
                            UrunId = 22,
                            Ad = "Mantı",
                            Kalori = 170m,
                            KategoriId = 5
                        },
                        new
                        {
                            UrunId = 23,
                            Ad = "Köfte",
                            Kalori = 168m,
                            KategoriId = 5
                        },
                        new
                        {
                            UrunId = 24,
                            Ad = "Pide",
                            Kalori = 209m,
                            KategoriId = 5
                        },
                        new
                        {
                            UrunId = 25,
                            Ad = "Hünkar Beğendi",
                            Kalori = 174m,
                            KategoriId = 5
                        });
                });

            modelBuilder.Entity("FitAnneKaloriSayaci.DATA.Siniflar.YemekRapor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("KaloriToplam")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("KullaniciID")
                        .HasColumnType("int");

                    b.Property<decimal>("Miktar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OgunID")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturulmaTarihi")
                        .HasColumnType("date");

                    b.Property<int>("UrunID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciID");

                    b.HasIndex("OgunID");

                    b.HasIndex("UrunID");

                    b.ToTable("YemekRaporlar");
                });

            modelBuilder.Entity("FitAnneKaloriSayaci.DATA.Siniflar.OgunUrun", b =>
                {
                    b.HasOne("FitAnneKaloriSayaci.DATA.Siniflar.Urun", "Urun")
                        .WithMany("OgunUrunleri")
                        .HasForeignKey("OgunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitAnneKaloriSayaci.DATA.Siniflar.Ogun", "Ogun")
                        .WithMany("OgunUrunleri")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ogun");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("FitAnneKaloriSayaci.DATA.Siniflar.Urun", b =>
                {
                    b.HasOne("FitAnneKaloriSayaci.DATA.Siniflar.Kategori", "Kategori")
                        .WithMany("Urunler")
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("FitAnneKaloriSayaci.DATA.Siniflar.YemekRapor", b =>
                {
                    b.HasOne("FitAnneKaloriSayaci.DATA.Siniflar.Kullanici", "Kullanici")
                        .WithMany()
                        .HasForeignKey("KullaniciID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitAnneKaloriSayaci.DATA.Siniflar.Ogun", "Ogun")
                        .WithMany()
                        .HasForeignKey("OgunID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitAnneKaloriSayaci.DATA.Siniflar.Urun", "Urun")
                        .WithMany()
                        .HasForeignKey("UrunID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");

                    b.Navigation("Ogun");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("FitAnneKaloriSayaci.DATA.Siniflar.Kategori", b =>
                {
                    b.Navigation("Urunler");
                });

            modelBuilder.Entity("FitAnneKaloriSayaci.DATA.Siniflar.Ogun", b =>
                {
                    b.Navigation("OgunUrunleri");
                });

            modelBuilder.Entity("FitAnneKaloriSayaci.DATA.Siniflar.Urun", b =>
                {
                    b.Navigation("OgunUrunleri");
                });
#pragma warning restore 612, 618
        }
    }
}
